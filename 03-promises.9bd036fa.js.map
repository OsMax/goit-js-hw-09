{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAS,CACbC,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,iBAC7BI,OAAQL,SAASC,cAAc,oBAKjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,S,GAEpBA,E,IAXPJ,EAAKgB,iBAAiB,UAetB,SAAoBC,GAClBA,EAAEC,iBAKF,IAJA,IAAMC,EAAQC,OAAOjB,EAAOC,MAAMiB,OAC5BhB,EAAOe,OAAOjB,EAAOE,KAAKgB,OAC1Bf,EAASc,OAAOjB,EAAOG,OAAOe,OAE3BC,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1Bf,EAAce,EAAI,EAAGjB,EAAOiB,EAAIH,GAC7BI,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAEjBqB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAElBqB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nform.addEventListener('submit', letStartIt);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction letStartIt(e) {\n  e.preventDefault();\n  const delay = Number(inputs.delay.value);\n  const step = Number(inputs.step.value);\n  const amount = Number(inputs.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, step * i + delay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputs","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9bd036fa.js.map"}